#!/bin/sh
### BEGIN INIT INFO
# Provides:          seafile-bundle
# Required-Start:    mysql
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:
# Short-Description: The Seafile Bundle starter.
### END INIT INFO

export PYTHONPATH=/usr/local/lib/python3.6/site-packages/:/var/seafile/source/seahub/thirdpart:$PYTHONPATH
export PYTHONPATH=/var/seafile/source:/var/seafile/source/pro/python:$CCNET_CONF_DIR:$PYTHONPATH

export CCNET_CONF_DIR=/var/seafile/conf
export SEAFILE_CONF_DIR=/var/seafile/seafile-data
export SEAFILE_CENTRAL_CONF_DIR=/var/seafile/conf
export SEAFES_DIR=/var/seafile/source/pro/python/seafes
export SEAHUB_DIR=/var/seafile/source/seahub
export SEAHUB_LOG_DIR=/var/seafile/log
 
case "$1" in
start)
    nohup seaf-server -c /var/seafile/conf -d /var/seafile/seafile-data -D all -f -l - >/var/seafile/log/seafile-server-std.log 2>/var/seafile/log/seafile-server-err.log &
    echo "Seafile-server startup"
	
	cd /var/seafile/source/pro/python/seafevents
	nohup ./run.sh >/dev/null 2>&1 &
	echo "Seaf-Events startup"
	
	cd /var/seafile/source/seahub/
	nohup python manage.py runserver 0.0.0.0:8000 >/var/seafile/log/seahub-std.log 2>/var/seafile/log/seahub-err.log &
	echo "Seahub startup"
	
	cd /var/seafile/source/seafdav/
	nohup ./run.sh >/var/seafile/log/seafdav-std.log 2>/var/seafile/log/seafdav-err.log &
	echo "Seafdav startup"
    ;;  
stop)
    seahub_pid=`ps aux|grep 'python manage.py runserver' | grep -v 'grep' | awk '{print $2}'`
    kill -9 $seahub_pid
    echo "Seahub stopped"
	
	sefdav_pid=`ps aux|grep 'python -m wsgidav' | grep -v 'grep' | awk '{print $2}'`
	kill -9 $sefdav_pid
	echo "Seafdav stopped"
	
	seafevents_pid=`ps aux|grep 'seafile_events.py' | grep -v 'grep' | awk '{print $2}'`
    kill -9 $seafevents_pid
    echo "Seaf-Events stopped"
	
	seaf_server_pid=`ps aux|grep seaf-server | grep -v 'grep seaf-server' | awk '{print $2}'`
    kill -9 $seaf_server_pid
    echo "Seafile-server stopped"
	
    ;;  
restart)
    seahub_pid=`ps aux|grep 'python manage.py runserver' | grep -v 'grep' | awk '{print $2}'`
    kill -9 $seahub_pid
    echo "Seahub stopped"
	
	sefdav_pid=`ps aux|grep 'python -m wsgidav' | grep -v 'grep' | awk '{print $2}'`
	kill -9 $sefdav_pid
	echo "Seafdav stopped"
	
	seafevents_pid=`ps aux|grep 'seafile_events.py' | grep -v 'grep' | awk '{print $2}'`
	kill -9 $seafevents_pid
	echo "Seaf-Events stopped"
	
	seaf_server_pid=`ps aux|grep seaf-server | grep -v 'grep seaf-server' | awk '{print $2}'`
    kill -9 $seaf_server_pid
    echo "Seafile-server stopped"
	
	nohup seaf-server -c /var/seafile/conf -d /var/seafile/seafile-data -D all -f -l - >/var/seafile/log/seafile-server.log 2>&1 &
    echo "Seafile-server startup"
	
	cd /var/seafile/source/pro/python/seafevents
	nohup ./run.sh >/dev/null 2>&1 &
	echo "Seaf-Events startup"
	
	cd /var/seafile/source/seahub/
	nohup python manage.py runserver 0.0.0.0:8000 >/var/seafile/log/seahub-std.log 2>&1 &
	echo "Seahub startup"
	
	cd /var/seafile/source/seafdav/
	nohup ./run.sh >/var/seafile/log/seafdav-std.log 2>/var/seafile/log/seafdav-err.log &
	echo "Seafdav startup"
    ;;  
esac
 
exit $?

	